/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import de.charite.compbio.topodombar.core.Topodombar;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFileChooser;

/**
 *
 * @author jonas
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form TopodombarGUI
     */
    public Gui() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputFileChooser = new javax.swing.JFileChooser();
        domainFileChooser = new javax.swing.JFileChooser();
        genesFileChooser = new javax.swing.JFileChooser();
        overlapFunctionButtonGroup = new javax.swing.ButtonGroup();
        inputFileButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        inputFileTextField = new javax.swing.JTextField();
        domainFileTextLabel = new javax.swing.JLabel();
        domainButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        domainTextField = new javax.swing.JTextField();
        geneFileTextLabel = new javax.swing.JLabel();
        genesTextField = new javax.swing.JTextField();
        genesButton = new javax.swing.JButton();
        ontologyFileTextLabel = new javax.swing.JLabel();
        ontologyTextField = new javax.swing.JTextField();
        ontologyButton = new javax.swing.JButton();
        annotationFileTextLabel = new javax.swing.JLabel();
        annotationTextField = new javax.swing.JTextField();
        annotationButton = new javax.swing.JButton();
        phenotypeCheckbox = new javax.swing.JCheckBox();
        phenotypeLabel = new javax.swing.JLabel();
        phenotypeTextField = new javax.swing.JTextField();
        filterCheckBox = new javax.swing.JCheckBox();
        filterFileTextField = new javax.swing.JTextField();
        filterFileButton = new javax.swing.JButton();
        reciprocalRadioButton = new javax.swing.JRadioButton();
        anyRadioButton = new javax.swing.JRadioButton();
        completeRadioButton = new javax.swing.JRadioButton();
        overlapFractionLabel = new javax.swing.JLabel();
        overlapFractionTextField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadItem = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        inputFileChooser.setDialogTitle("Input file chooser");

        domainFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domainFileChooserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Topodombar");
        setLocationByPlatform(true);

        inputFileButton.setText("open");
        inputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Input CNV file:");

        inputFileTextField.setText("no file selected...");
        inputFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileTextFieldActionPerformed(evt);
            }
        });

        domainFileTextLabel.setText("Toplogical domains file:");

        domainButton.setText("open");
        domainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domainButtonActionPerformed(evt);
            }
        });

        runButton.setText("Run Analysis");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        titleLabel.setText("Choose input files and hit the button 'Run' below.");

        domainTextField.setText("no file selected...");

        geneFileTextLabel.setText("Genes file:");

        genesTextField.setText("no file selected...");

        genesButton.setText("open");
        genesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genesButtonActionPerformed(evt);
            }
        });

        ontologyFileTextLabel.setText("Phenotype ontology file:");

        ontologyTextField.setText("no file selected...");

        ontologyButton.setText("open");
        ontologyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ontologyButtonActionPerformed(evt);
            }
        });

        annotationFileTextLabel.setText("Phenotype annotation file:");

        annotationTextField.setText("no file selected...");

        annotationButton.setText("open");
        annotationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annotationButtonActionPerformed(evt);
            }
        });

        phenotypeCheckbox.setText("Single phenotype for entire cohort");
        phenotypeCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phenotypeCheckboxActionPerformed(evt);
            }
        });

        phenotypeLabel.setText("HPO term ID:");
        phenotypeLabel.setEnabled(false);

        phenotypeTextField.setEnabled(false);
        phenotypeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phenotypeTextFieldActionPerformed(evt);
            }
        });

        filterCheckBox.setText("Filter control CNVs");
        filterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterCheckBoxActionPerformed(evt);
            }
        });

        filterFileTextField.setText("no file selected...");
        filterFileTextField.setEnabled(false);
        filterFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterFileTextFieldActionPerformed(evt);
            }
        });

        filterFileButton.setText("open");
        filterFileButton.setEnabled(false);
        filterFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterFileButtonActionPerformed(evt);
            }
        });

        overlapFunctionButtonGroup.add(reciprocalRadioButton);
        reciprocalRadioButton.setText("reciprocal overlap");
        reciprocalRadioButton.setEnabled(false);
        reciprocalRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciprocalRadioButtonActionPerformed(evt);
            }
        });

        overlapFunctionButtonGroup.add(anyRadioButton);
        anyRadioButton.setText("any overlap");
        anyRadioButton.setEnabled(false);

        overlapFunctionButtonGroup.add(completeRadioButton);
        completeRadioButton.setText("complete overlap");
        completeRadioButton.setEnabled(false);

        overlapFractionLabel.setText("OverlapFraction:");
        overlapFractionLabel.setEnabled(false);

        overlapFractionTextField.setText("0.5");
        overlapFractionTextField.setEnabled(false);
        overlapFractionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overlapFractionTextFieldActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        loadItem.setText("save settings");
        loadItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadItem);

        jMenuItem2.setText("load settings");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ontologyFileTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(annotationFileTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ontologyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(ontologyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(annotationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(annotationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(geneFileTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(domainFileTextLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(domainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(genesButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(domainButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inputFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(phenotypeCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(phenotypeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phenotypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(filterFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filterCheckBox)
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(anyRadioButton)
                                                    .addComponent(completeRadioButton))
                                                .addGap(173, 173, 173))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(reciprocalRadioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(overlapFractionLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addComponent(overlapFractionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(filterFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(runButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {annotationTextField, domainTextField, filterFileTextField, genesTextField, inputFileTextField, ontologyTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(inputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phenotypeCheckbox)
                    .addComponent(phenotypeLabel)
                    .addComponent(phenotypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filterCheckBox)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(filterFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(filterFileButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reciprocalRadioButton)
                    .addComponent(overlapFractionLabel)
                    .addComponent(overlapFractionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anyRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(completeRadioButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(domainFileTextLabel)
                    .addComponent(domainButton)
                    .addComponent(domainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(geneFileTextLabel)
                    .addComponent(genesButton)
                    .addComponent(genesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(ontologyFileTextLabel)
                    .addComponent(ontologyButton)
                    .addComponent(ontologyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(annotationFileTextLabel)
                    .addComponent(annotationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(annotationButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(runButton)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileButtonActionPerformed
        int returnVal = inputFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = inputFileChooser.getSelectedFile();
            // What to do with the file, e.g. display it in a TextArea
            inputFileTextField.setText( file.getAbsolutePath() );
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_inputFileButtonActionPerformed

    private void domainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domainButtonActionPerformed
        int returnVal = domainFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = domainFileChooser.getSelectedFile();
            // What to do with the file, e.g. display it in a TextArea
            domainTextField.setText( file.getAbsolutePath() );
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_domainButtonActionPerformed

    private void inputFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFileTextFieldActionPerformed

    private void domainFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domainFileChooserActionPerformed

    }//GEN-LAST:event_domainFileChooserActionPerformed
    
    /**
     * Parse the arguments map from the text fields.
     * @return 
     */
    private Map<String, Object> parseArgsMap(){

        Map<String, Object> argsMap = new HashMap<String, Object>();

        String inputPath = inputFileTextField.getText();
        argsMap.put("input_file", inputPath);
        // if phenotype checkbox is active:
        if(phenotypeCheckbox.isSelected()){
            argsMap.put("phenotype", phenotypeTextField.getText());
        }
        
        argsMap.put("domain", domainTextField.getText());
        argsMap.put("genes", genesTextField.getText());
        
        System.out.println("DEBUG: " + argsMap);
        
        return argsMap;
    }
    
    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        
        // read the arguments form the fields
        Map<String, Object> argsMap = parseArgsMap();
        
        // TODO check for valid paths
        
        // run main program
        try{
            System.out.println("DEBUG: Try now to crate an instance of Topodombar class.");
            Topodombar topodombar = new Topodombar(argsMap);
        }catch (IOException e){
            // TODO handle file not found errors!
            System.err.println("[ERROR] by starting topodombar. Exit now.");
            System.exit(1);
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void loadItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadItemActionPerformed

    private void genesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genesButtonActionPerformed
        int returnVal = genesFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = genesFileChooser.getSelectedFile();
            // What to do with the file, e.g. display it in a TextArea
            genesTextField.setText( file.getAbsolutePath() );
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_genesButtonActionPerformed

    private void ontologyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ontologyButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ontologyButtonActionPerformed

    private void annotationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annotationButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annotationButtonActionPerformed

    private void phenotypeCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phenotypeCheckboxActionPerformed
        
        phenotypeLabel.setEnabled(phenotypeCheckbox.isSelected());
        phenotypeTextField.setEnabled(phenotypeCheckbox.isSelected());
        
    }//GEN-LAST:event_phenotypeCheckboxActionPerformed

    private void phenotypeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phenotypeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phenotypeTextFieldActionPerformed

    private void filterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterCheckBoxActionPerformed
        
        // enable options for filtering against control CNVs:
        boolean useFilter = filterCheckBox.isSelected();
        
        filterFileTextField.setEnabled(useFilter);
        filterFileButton.setEnabled(useFilter);
        reciprocalRadioButton.setEnabled(useFilter);
        completeRadioButton.setEnabled(useFilter);
        anyRadioButton.setEnabled(useFilter);
        
        
    }//GEN-LAST:event_filterCheckBoxActionPerformed

    private void filterFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterFileTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterFileTextFieldActionPerformed

    private void filterFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterFileButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterFileButtonActionPerformed

    private void overlapFractionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overlapFractionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_overlapFractionTextFieldActionPerformed

    private void reciprocalRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciprocalRadioButtonActionPerformed

        // enable overlap fraction options:
        overlapFractionLabel.setEnabled(reciprocalRadioButton.isSelected());
        overlapFractionTextField.setEnabled(reciprocalRadioButton.isSelected());

    }//GEN-LAST:event_reciprocalRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annotationButton;
    private javax.swing.JLabel annotationFileTextLabel;
    private javax.swing.JTextField annotationTextField;
    private javax.swing.JRadioButton anyRadioButton;
    private javax.swing.JRadioButton completeRadioButton;
    private javax.swing.JButton domainButton;
    private javax.swing.JFileChooser domainFileChooser;
    private javax.swing.JLabel domainFileTextLabel;
    private javax.swing.JTextField domainTextField;
    private javax.swing.JCheckBox filterCheckBox;
    private javax.swing.JButton filterFileButton;
    private javax.swing.JTextField filterFileTextField;
    private javax.swing.JLabel geneFileTextLabel;
    private javax.swing.JButton genesButton;
    private javax.swing.JFileChooser genesFileChooser;
    private javax.swing.JTextField genesTextField;
    private javax.swing.JButton inputFileButton;
    private javax.swing.JFileChooser inputFileChooser;
    private javax.swing.JTextField inputFileTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem loadItem;
    private javax.swing.JButton ontologyButton;
    private javax.swing.JLabel ontologyFileTextLabel;
    private javax.swing.JTextField ontologyTextField;
    private javax.swing.JLabel overlapFractionLabel;
    private javax.swing.JTextField overlapFractionTextField;
    private javax.swing.ButtonGroup overlapFunctionButtonGroup;
    private javax.swing.JCheckBox phenotypeCheckbox;
    private javax.swing.JLabel phenotypeLabel;
    private javax.swing.JTextField phenotypeTextField;
    private javax.swing.JRadioButton reciprocalRadioButton;
    private javax.swing.JButton runButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
